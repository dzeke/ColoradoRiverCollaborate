dfExtremeFlows$Order <- seq(nRows, 1, -1)
# Split Methods and Strategies to add newline to wrap text
for (i in 1:nRows){
splitstr <- str_split(dfExtremeFlows$`Extreme Low Flow Method`[i], "  ")
dfExtremeFlows$`Extreme Low Flow Method`[i] <- str_c(splitstr[[1]], collapse = "\n")
splitstr <- str_split(dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i], "  ")
dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i] <- str_c(splitstr[[1]], collapse = "\n")
}
dfExtremeFlows <- read_excel(sExtremeFlowFile, sheet = "ExtremeFlows")
dfExtremeFlows[is.na(dfExtremeFlows)] <- ""
# # CSV version
# sExtremeFlowFile <- 'ColoradoRiverExtremeLowFlowScenarios.csv'
# dfExtremeFlows <- read.csv(file = sExtremeFlowFile, header = FALSE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "#")
# Save the number of rows in the data frame
nRows <- nrow(dfExtremeFlows)
# Add a column to specify the sort order
dfExtremeFlows$Order <- seq(nRows, 1, -1)
splitstr <- str_split(dfExtremeFlows$`Extreme Low Flow Method`[i], "  ")
splitstr
str_c(splitstr[[1]], collapse = "\n")
splitstr <- str_split(dfExtremeFlows$`Extreme Low Flow Method`[4], "  ")
splitstr
str_c(splitstr[[1]], collapse = "\n")
dfExtremeFlows$`Extreme Low Flow Method`[4] <- str_c(splitstr[[1]], collapse = "\n")
dfExtremeFlows$`Extreme Low Flow Method`[4]
View(dfExtremeFlows)
View(dfExtremeFlows)
dfExtremeFlows <- read_excel(sExtremeFlowFile, sheet = "ExtremeFlows")
# Replace NA with spaces
dfExtremeFlows[is.na(dfExtremeFlows)] <- ""
# # CSV version
# sExtremeFlowFile <- 'ColoradoRiverExtremeLowFlowScenarios.csv'
# dfExtremeFlows <- read.csv(file = sExtremeFlowFile, header = FALSE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "#")
# Save the number of rows in the data frame
nRows <- nrow(dfExtremeFlows)
# Add a column to specify the sort order
dfExtremeFlows$Order <- seq(nRows, 1, -1)
# Split Methods and Strategies to add newline to wrap text
for (i in 1:nRows){
splitstr <- str_split(dfExtremeFlows$`Extreme Low Flow Method`[i], "  ")
dfExtremeFlows$`Extreme Low Flow Method`[i] <- str_c(splitstr[[1]], collapse = "\n")
splitstr <- str_split(dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i], "  ")
dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i] <- str_c(splitstr[[1]], collapse = "\n")
}
dfExtremeFlows$`Strategy to Stabilize Lake Levels`[4]
dfExtremeFlows$`Strategy to Stabilize Lake Levels`[5]
# Reverse sort so Method A. plots on top at order value 9
dfExtremeFlows$ExtremeLowMethod <- sort(dfExtremeFlows$`Extreme Low Flow Method`, decreasing = TRUE)
dfExtremeFlows$Strategy <- rev(dfExtremeFlows$`Strategy to Stabilize Lake Levels`)
cColorsToPlot <- brewer.pal(9, "Blues")
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`,
yend = Order )) +
geom_segment(size = 10) +
#scale_color_manual(values = cColorsToPlot) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = NULL, sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=14), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`,
yend = Order )) +
geom_segment(size = 10) +
#scale_color_manual(values = cColorsToPlot) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = NULL, sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`,
yend = Order )) +
geom_segment(size = 10) +
#scale_color_manual(values = cColorsToPlot) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
dfExtremeFlows <- read_excel(sExtremeFlowFile, sheet = "ExtremeFlows")
# Replace NA with spaces
dfExtremeFlows[is.na(dfExtremeFlows)] <- ""
# # CSV version
# sExtremeFlowFile <- 'ColoradoRiverExtremeLowFlowScenarios.csv'
# dfExtremeFlows <- read.csv(file = sExtremeFlowFile, header = FALSE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "#")
# Save the number of rows in the data frame
nRows <- nrow(dfExtremeFlows)
# Add a column to specify the sort order
dfExtremeFlows$Order <- seq(nRows, 1, -1)
# Split Methods and Strategies to add newline to wrap text
for (i in 1:nRows){
splitstr <- str_split(dfExtremeFlows$`Extreme Low Flow Method`[i], "  ")
dfExtremeFlows$`Extreme Low Flow Method`[i] <- str_c(splitstr[[1]], collapse = "\n")
splitstr <- str_split(dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i], "  ")
dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i] <- str_c(splitstr[[1]], collapse = "\n")
}
# Reverse sort so Method A. plots on top at order value 9
dfExtremeFlows$ExtremeLowMethod <- sort(dfExtremeFlows$`Extreme Low Flow Method`, decreasing = TRUE)
dfExtremeFlows$Strategy <- rev(dfExtremeFlows$`Strategy to Stabilize Lake Levels`)
#dfExtremeFlows$Strategy <- sort(dfExtremeFlows$`Strategy to Stabilize Lake Levels`, decreasing = TRUE)
#dfExtremeFlows$ExtremeLowMethod <- factor(dfExtremeFlows$`Extreme Low Flow Method`, levels = sort(unique(dfExtremeFlows$`Extreme Low Flow Method` ), decreasing = TRUE))
cColorsToPlot <- brewer.pal(9, "Blues")
#### Figure 1 - Lines as
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`,
yend = Order )) +
geom_segment(size = 10) +
#scale_color_manual(values = cColorsToPlot) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
rm(list = ls())  #Clear history
#Load packages in one go
#List of packages
load.lib <- c("tidyverse", "readxl", "RColorBrewer", "dplyr", "expss", "reshape2", "pracma", "lubridate", "directlabels", "plyr", "stringr", "ggplot2")
# Then we select only the packages that aren't currently installed.
install.lib <- load.lib[!load.lib %in% installed.packages()]
# And finally we install the missing packages, including their dependency.
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
# After the installation process completes, we load all packages.
sapply(load.lib,require,character=TRUE)
### Read in the Extreme Flow values
# Excel version
sExtremeFlowFile <- 'ColoradoRiverExtremeLowFlowScenarios.xlsx'
dfExtremeFlows <- read_excel(sExtremeFlowFile, sheet = "ExtremeFlows")
# Replace NA with spaces
dfExtremeFlows[is.na(dfExtremeFlows)] <- ""
# # CSV version
# sExtremeFlowFile <- 'ColoradoRiverExtremeLowFlowScenarios.csv'
# dfExtremeFlows <- read.csv(file = sExtremeFlowFile, header = FALSE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "#")
# Save the number of rows in the data frame
nRows <- nrow(dfExtremeFlows)
# Add a column to specify the sort order
dfExtremeFlows$Order <- seq(nRows, 1, -1)
# Combine Flow Location and Flow Type columns to get a single text string to use as the fill color
dfExtremeFlows$TypeLocation <- paste(dfExtremeFlows$`Flow Type`,'-',dfExtremeFlows$`Flow Location`)
View(dfExtremeFlows)
View(dfExtremeFlows)
dfExtremeFlows$TypeLocation <- paste0(dfExtremeFlows$`Flow Type`,'-',dfExtremeFlows$`Flow Location`)
dfExtremeFlows$TypeLocation <- paste0(dfExtremeFlows$`Flow Location`, '-', dfExtremeFlows$`Flow Type`)
# Split Methods and Strategies to add newline to wrap text
for (i in 1:nRows){
splitstr <- str_split(dfExtremeFlows$`Extreme Low Flow Method`[i], "  ")
dfExtremeFlows$`Extreme Low Flow Method`[i] <- str_c(splitstr[[1]], collapse = "\n")
splitstr <- str_split(dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i], "  ")
dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i] <- str_c(splitstr[[1]], collapse = "\n")
}
# Reverse sort so Method A. plots on top at order value 9
dfExtremeFlows$ExtremeLowMethod <- sort(dfExtremeFlows$`Extreme Low Flow Method`, decreasing = TRUE)
dfExtremeFlows$Strategy <- rev(dfExtremeFlows$`Strategy to Stabilize Lake Levels`)
#dfExtremeFlows$Strategy <- sort(dfExtremeFlows$`Strategy to Stabilize Lake Levels`, decreasing = TRUE)
#dfExtremeFlows$ExtremeLowMethod <- factor(dfExtremeFlows$`Extreme Low Flow Method`, levels = sort(unique(dfExtremeFlows$`Extreme Low Flow Method` ), decreasing = TRUE))
cColorsToPlot <- brewer.pal(9, "Blues")
#### Figure 1 - Lines as
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`,
yend = Order )) +
geom_segment(size = 10) +
#scale_color_manual(values = cColorsToPlot) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
cRedsToPlot <- brewer.pal(9, "Reds")
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, fill = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_fill_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[7], "Lake Powell-Regulated Inflow" = cBluesToPlot[4], "Lake Powell-Release" = cBluesToPlot[2], "Lake Mead-Regulated Inflow" = cRedsToPlot[7])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
cBluesToPlot <- brewer.pal(9, "Blues")
cRedsToPlot <- brewer.pal(9, "Reds")
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, fill = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_fill_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[7], "Lake Powell-Regulated Inflow" = cBluesToPlot[4], "Lake Powell-Release" = cBluesToPlot[2], "Lake Mead-Regulated Inflow" = cRedsToPlot[7])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[7], "Lake Powell-Regulated Inflow" = cBluesToPlot[4], "Lake Powell-Release" = cBluesToPlot[2], "Lake Mead-Regulated Inflow" = cRedsToPlot[7])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[7], "Lake Powell-Regulated Inflow" = cBluesToPlot[5], "Lake Powell-Release" = cBluesToPlot[4], "Lake Mead-Regulated Inflow" = cRedsToPlot[7])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[8], "Lake Powell-Regulated Inflow" = cBluesToPlot[6], "Lake Powell-Release" = cBluesToPlot[5], "Lake Mead-Regulated Inflow" = cRedsToPlot[7])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16), legend.title = element_text("Annual Release\nMAF"), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[8], "Lake Powell-Regulated Inflow" = cBluesToPlot[6], "Lake Powell-Release" = cBluesToPlot[5], "Lake Mead-Regulated Inflow" = cRedsToPlot[7])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16),  legend.title=element_blank(), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
dfExtremeFlows <- read_excel(sExtremeFlowFile, sheet = "ExtremeFlows")
# Replace NA with spaces
dfExtremeFlows[is.na(dfExtremeFlows)] <- ""
# # CSV version
# sExtremeFlowFile <- 'ColoradoRiverExtremeLowFlowScenarios.csv'
# dfExtremeFlows <- read.csv(file = sExtremeFlowFile, header = FALSE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "#")
# Save the number of rows in the data frame
nRows <- nrow(dfExtremeFlows)
# Add a column to specify the sort order
dfExtremeFlows$Order <- seq(nRows, 1, -1)
# Combine Flow Location and Flow Type columns to get a single text string to use as the fill color
dfExtremeFlows$TypeLocation <- paste0(dfExtremeFlows$`Flow Location`, '-', dfExtremeFlows$`Flow Type`)
# Split Methods and Strategies to add newline to wrap text
for (i in 1:nRows){
splitstr <- str_split(dfExtremeFlows$`Extreme Low Flow Method`[i], "  ")
dfExtremeFlows$`Extreme Low Flow Method`[i] <- str_c(splitstr[[1]], collapse = "\n")
splitstr <- str_split(dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i], "  ")
dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i] <- str_c(splitstr[[1]], collapse = "\n")
}
# Reverse sort so Method A. plots on top at order value 9
dfExtremeFlows$ExtremeLowMethod <- sort(dfExtremeFlows$`Extreme Low Flow Method`, decreasing = TRUE)
dfExtremeFlows$Strategy <- rev(dfExtremeFlows$`Strategy to Stabilize Lake Levels`)
#dfExtremeFlows$Strategy <- sort(dfExtremeFlows$`Strategy to Stabilize Lake Levels`, decreasing = TRUE)
#dfExtremeFlows$ExtremeLowMethod <- factor(dfExtremeFlows$`Extreme Low Flow Method`, levels = sort(unique(dfExtremeFlows$`Extreme Low Flow Method` ), decreasing = TRUE))
cBluesToPlot <- brewer.pal(9, "Blues")
cRedsToPlot <- brewer.pal(9, "Reds")
#### Figure 1 - Lines as
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[8], "Lake Powell-Regulated Inflow" = cBluesToPlot[6], "Lake Powell-Release" = cBluesToPlot[5], "Lake Mead-Regulated Inflow" = cRedsToPlot[7]),
breaks = c(dfExtremeFlows$TypeLocation[1], dfExtremeFlows$TypeLocation[3], dfExtremeFlows$TypeLocation[4], dfExtremeFlows$TypeLocation[5])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16),  legend.title=element_blank(), legend.text=element_text(size=14), axis.text.x = element_text(size=12))
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[8], "Lake Powell-Regulated Inflow" = cBluesToPlot[6], "Lake Powell-Release" = cBluesToPlot[5], "Lake Mead-Regulated Inflow" = cRedsToPlot[7]),
breaks = c(dfExtremeFlows$TypeLocation[1], dfExtremeFlows$TypeLocation[3], dfExtremeFlows$TypeLocation[4], dfExtremeFlows$TypeLocation[5])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16),  legend.title=element_blank(),
legend.text=element_text(size=14), axis.text.x = element_text(size=12),
panel.grid.minor = element_blank())
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[8], "Lake Powell-Regulated Inflow" = cBluesToPlot[6], "Lake Powell-Release" = cBluesToPlot[5], "Lake Mead-Regulated Inflow" = cRedsToPlot[7]),
breaks = c(dfExtremeFlows$TypeLocation[1], dfExtremeFlows$TypeLocation[3], dfExtremeFlows$TypeLocation[4], dfExtremeFlows$TypeLocation[5])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16),  legend.title=element_blank(),
legend.text=element_text(size=14), axis.text.x = element_text(size=12),
panel.grid.minor = element_blank(),
legend.position = "top")
####################
#     ColoradoRiverExtremeLowFlowScenarios.R
#
# This project compiles and compares scenarios of extreme low Coloardo River flows used in 6 different prior studies.
# The purpose is to compare the inflow scenarios across the studies that used river flow as an operations criteria.
#
# The data for this comparision are located in the Excel file **ColoradoRiverExtremeLowFlowFlowScenarios.xlsx**.
#
# A line segment plot shows the range of extreme low flows used in each study. The figure additionally shows the strategy
# used to stabilize reservoir storage for each study.
# The studies are:
#  A. Wang, J., and Rosenberg, D. E. (2023). "Adapting Colorado River Basin Depletions to Available Water to Live within Our Means." Journal of Water Resources Planning and Management, 149(7), 04023026. https://doi.org/10.1061/JWRMD5.WRENG-5555.
#  B. Rosenberg, D. E. (2024a). "Lessons from immersive online collaborative modeling to discuss more adaptive reservoir operations." Journal of Water Resources Planning and Management, 150(7). https://doi.org/10.1061/JWRMD5.WRENG-5893.
#  C. Rosenberg, D. E. (2022). "Adapt Lake Mead Releases to Inflow to Give Managers More Flexibility to Slow Reservoir Drawdown." Journal of Water Resources Planning and Management, 148(10), 02522006. https://doi.org/10.1061/(ASCE)WR.1943-5452.0001592.
#  D. Abualqumboz, M., Chamberlain, B., and Rosenberg, D. (2024). "Adaptively Managing Lake Powell Releases to Respond to Reservoir Inflow and Evaporation." Utah State University Digital Commons. https://digitalcommons.usu.edu/cee_stures/12/.
#  E. Rosenberg, D. E. (2024b). "Reclamation Web Tool - Minimum Glen Canyon Dam Annual Release to protect Lake Powell Minimum Power Pool." Github, https://github.com/dzeke/ColoradoRiverCollaborate/tree/main/Post2026WebTool [Accessed on: July 3, 2025].
#  F. Myers, A. (2025). "Immersive Modeling for Lake Mead". https://github.com/Anabelle374/ImmersiveModelLakeMead"
#
#
#     David E. Rosenberg
#     August 2, 2025
#     david.rosenberg@usu.edu
#
#####
rm(list = ls())  #Clear history
#Load packages in one go
#List of packages
load.lib <- c("tidyverse", "readxl", "RColorBrewer", "dplyr", "expss", "reshape2", "pracma", "lubridate", "directlabels", "plyr", "stringr", "ggplot2")
# Then we select only the packages that aren't currently installed.
install.lib <- load.lib[!load.lib %in% installed.packages()]
# And finally we install the missing packages, including their dependency.
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
# After the installation process completes, we load all packages.
sapply(load.lib,require,character=TRUE)
### Read in the Extreme Flow values
# Excel version
sExtremeFlowFile <- 'ColoradoRiverExtremeLowFlowScenarios.xlsx'
dfExtremeFlows <- read_excel(sExtremeFlowFile, sheet = "ExtremeFlows")
# Replace NA with spaces
dfExtremeFlows[is.na(dfExtremeFlows)] <- ""
# # CSV version
# sExtremeFlowFile <- 'ColoradoRiverExtremeLowFlowScenarios.csv'
# dfExtremeFlows <- read.csv(file = sExtremeFlowFile, header = FALSE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "#")
# Save the number of rows in the data frame
nRows <- nrow(dfExtremeFlows)
# Add a column to specify the sort order
dfExtremeFlows$Order <- seq(nRows, 1, -1)
# Combine Flow Location and Flow Type columns to get a single text string to use as the fill color
dfExtremeFlows$TypeLocation <- paste0(dfExtremeFlows$`Flow Location`, '-', dfExtremeFlows$`Flow Type`)
# Split Methods and Strategies to add newline to wrap text
for (i in 1:nRows){
splitstr <- str_split(dfExtremeFlows$`Extreme Low Flow Method`[i], "  ")
dfExtremeFlows$`Extreme Low Flow Method`[i] <- str_c(splitstr[[1]], collapse = "\n")
splitstr <- str_split(dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i], "  ")
dfExtremeFlows$`Strategy to Stabilize Lake Levels`[i] <- str_c(splitstr[[1]], collapse = "\n")
}
# Reverse sort so Method A. plots on top at order value 9
dfExtremeFlows$ExtremeLowMethod <- sort(dfExtremeFlows$`Extreme Low Flow Method`, decreasing = TRUE)
dfExtremeFlows$Strategy <- rev(dfExtremeFlows$`Strategy to Stabilize Lake Levels`)
#dfExtremeFlows$Strategy <- sort(dfExtremeFlows$`Strategy to Stabilize Lake Levels`, decreasing = TRUE)
#dfExtremeFlows$ExtremeLowMethod <- factor(dfExtremeFlows$`Extreme Low Flow Method`, levels = sort(unique(dfExtremeFlows$`Extreme Low Flow Method` ), decreasing = TRUE))
cBluesToPlot <- brewer.pal(9, "Blues")
cRedsToPlot <- brewer.pal(9, "Reds")
#### Figure 1 - Lines as
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[8], "Lake Powell-Regulated Inflow" = cBluesToPlot[6], "Lake Powell-Release" = cBluesToPlot[5], "Lake Mead-Regulated Inflow" = cRedsToPlot[7]),
breaks = c(dfExtremeFlows$TypeLocation[1], dfExtremeFlows$TypeLocation[3], dfExtremeFlows$TypeLocation[4], dfExtremeFlows$TypeLocation[5])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16),  legend.title=element_blank(),
legend.text=element_text(size=14), axis.text.x = element_text(size=12),
panel.grid.minor = element_blank(),
legend.position = "top")
ggplot(data = dfExtremeFlows, aes(x = `Minimum (maf)`, y = Order, xend = `Maximum (maf)`, color = TypeLocation,
yend = Order )) +
geom_segment(size = 10) +
#scale_linetype_manual(values = c("solid","longdash")) +
scale_color_manual( values = c("Lee Ferry-Natural" = cBluesToPlot[8], "Lake Powell-Regulated Inflow" = cBluesToPlot[6], "Lake Powell-Release" = cBluesToPlot[5], "Lake Mead-Regulated Inflow" = cRedsToPlot[7]),
breaks = c(dfExtremeFlows$TypeLocation[1], dfExtremeFlows$TypeLocation[3], dfExtremeFlows$TypeLocation[4], dfExtremeFlows$TypeLocation[5])) +
#scale_color_manual(values = cColorsToPlot) +
# Set the x and y axis limits, breaks. Left Y axis for flow method and secondary right Y axis for Stabilize strategy
scale_x_continuous(limits = c(2,14), breaks = seq(2,14,2), minor_breaks = seq(2,14,2), sec.axis = sec_axis(~ . * 1, breaks = seq(2,14,2))) +
scale_y_continuous(limits = c(1, nRows), breaks = seq(1,nRows,1), labels = dfExtremeFlows$ExtremeLowMethod, sec.axis = sec_axis(~ . * 1, breaks = seq(1,nRows,1), labels = dfExtremeFlows$Strategy)) +
#scale_y_discrete(1, nRows, breaks = seq(nRows,1,-1), labels = dfExtremeFlows$ExtremeLowMethod) +
#Make one combined legend
#guides(color = guide_legend(""), linetype = guide_legend("")) +
theme_bw() +
labs(x="Flow (million acre-feet per year)", y="") +
#labs(x="", y="") +
#theme(text = element_text(size=20), legend.title=element_blank(), legend.text=element_text(size=18),
#      legend.position = c(0.8,0.7))
theme(text = element_text(size=16),  legend.title=element_blank(),
legend.text=element_text(size=14), axis.text.x = element_text(size=12),
panel.grid.minor = element_blank(),
legend.position = "top",
aspect.ratio = 1.5)

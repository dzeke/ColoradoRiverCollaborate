geom_line(data=dfMaxAnnualAmounts, aes(y=MaxDeposit/1e6,x=Year), size=2) +
geom_line(data=dfMaxAnnualAmounts, aes(color="Max Withdrawal", y=-MaxWithdraw/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black","Black")) +
scale_x_continuous(breaks=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2),labels=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2)) +
scale_y_continuous(sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[1],-nMaxBalance$Total[3])/1e6, labels = c("Max Deposit","Max Withdraw"))) +
#scale_x_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25), limits = c(0,as.numeric(dfMaxStor %>% filter(Reservoir %in% c("Mead")) %>% select(Volume))),
#                  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color = FALSE) +
theme_bw() +
labs(x="", y="Credit to Lake Mead Water Conservation Accounts\n(MAF per year)") +
theme(text = element_text(size=20),  legend.title = element_blank(), legend.text=element_text(size=18),
legend.position= c(1.075,0.5))
rm(list = ls())  #Clear history
#Load packages in one go
#List of packages
load.lib <- c("tidyverse", "readxl", "RColorBrewer", "dplyr", "expss", "reshape2", "pracma", "lubridate", "directlabels", "plyr", "stringr", "ggplot2", "ggpubr")
# Then we select only the packages that aren't currently installed.
install.lib <- load.lib[!load.lib %in% installed.packages()]
# And finally we install the missing packages, including their dependency.
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
# After the installation process completes, we load all packages.
sapply(load.lib,require,character=TRUE)
# Load required libraies
# if (!require(tidyverse)) {
#   install.packages("tidyverse", repos="https://cran.cnr.berkeley.edu/", verbose = TRUE)
#   library(tidyverse)
# }
#
# if (!require(readxl)) {
#   install.packages("readxl", repos="http://cran.r-project.org")
#   library(readxl)
# }
#
#
# if (!require(RColorBrewer)) {
#   install.packages("RColorBrewer",repos="http://cran.r-project.org")
#   library(RColorBrewer) #
# }
#
# if (!require(dplyr)) {
#   install.packages("dplyr",repos="http://cran.r-project.org")
#   library(dplyr) #
# }
#
# if (!require(expss)) {
#   install.packages("expss",repos="http://cran.r-project.org")
#   library(expss) #
# }
#
# if (!require(reshape2)) {
#   install.packages("reshape2", repos="http://cran.r-project.org")
#   library(reshape2)
# }
#
# if (!require(pracma)) {
#   install.packages("pracma", repos="http://cran.r-project.org")
#   library(pracma)
# }
#
# if (!require(lubridate)) {
#   install.packages("lubridate", repos="http://cran.r-project.org")
#   library(lubridate)
# }
#
# if (!require(directlabels)) {
#   install.packages("directlabels", repo="http://cran.r-project.org")
#   library(directlabels)
# }
#
# if (!require(plyr)) {
#   install.packages("plyr", repo="http://cran.r-project.org")
#   library(plyr)
# }
#
# if (!require(ggplot)) {
#   install.packages("ggPlot", repo="http://cran.r-project.org", dependencies = T)
#   library(ggplot)
# }
#
# if (!require(stringr)) {
#   install.packages("stringr", repo="http://cran.r-project.org")
#   library(stringr)
# }
# Load Data
# Read in state balances each year
sExcelFile <- 'IntentionallyCreatedSurplus-Summary.xlsx'
dfICSBalance <- read_excel(sExcelFile, sheet = "Sheet1",  range = "B6:G23")
dfICStoDCP <- read_excel(sExcelFile, sheet = "ICStoDCP",  range = "A2:M14")
dfLimits <- read_excel(sExcelFile, sheet = "Capacities",  range = "A7:F10")
#Read in max balance
nMaxBalance <- read_excel(sExcelFile, sheet = "Capacities",  range = "A7:F10")
#create a data frame
#dfMaxBalance <- data.frame(Year=dfICSBalance$Year, MaxBal =  nMaxBalance$Total[2])
#Read in max deposit per year
dfMaxAnnualAmounts <- data.frame(Year=dfICSBalance$Year, MaxDeposit = nMaxBalance$Total[1], MaxWithdraw = nMaxBalance$Total[3])
cColNames <- colnames(dfICSBalance)
#Melt the data so state columns become a variable
dfICSBalanceMelt <- melt(data = dfICSBalance,id.vars = "Year", measure.vars = cColNames[1:4])
#Calculate the Current ICS balance as a fraction of current Mead Storage
# Data from: https://www.usbr.gov/lc/region/g4000/hourly/levels.html
nCurrMeadStorage <- 9934*1000  # May 1, 2021
nCurrICSTotal <- dfICSBalanceMelt %>% filter(Year == 2019) %>% summarise(Total = sum(value))
print("ICS balance as fraction of Mead storage")
print(sprintf("%.1f%%",nCurrICSTotal$Total/nCurrMeadStorage*100))
print("Percent of Upper Colorado River Basin area of entire continential US area")
print(sprintf("%.1f%%",109800/3119884*100))
palBlues <- brewer.pal(9, "Blues")
#Plot #1. Stacked bar chart of account balance by state by year. Add individual state limits as secondary y axis
# Prepare state limits as a cumulative amount
cColNamesLimits <- colnames(dfLimits)
dfLimitsMelt <- melt(data=dfLimits, id.vars="New levels with DCP", measure.vars = cColNamesLimits[2:5])
dfMaxBalanceCum = dfLimitsMelt %>% filter(`New levels with DCP` == "Max Balance (AF)", variable != 'Total')
#Reorder so Arizona is on top
dfMaxBalanceCum$Order <- c(3,2,1)
dfMaxBalanceCum <- dfMaxBalanceCum[order(dfMaxBalanceCum$Order),]
#Calculate the cumulative total
dfMaxBalanceCum$CumVal <- cumsum(dfMaxBalanceCum$value)
#Replace the Arizona label
dfMaxBalanceCum$StateAsChar <- as.character(dfMaxBalanceCum$variable)
dfMaxBalanceCum$StateAsChar[3] <- "Total/Arizona"
#Write out the dataframe with ICS balances by year to CSV so can use later in other scripts
write.csv(dfICSBalanceMelt, file = "dfICSBalanceMelt.csv")
write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
#Figure 1 - timeseries of bar plots of ICS balances
ggplot() +
geom_bar(data=dfICSBalanceMelt %>% filter(variable != "Mexico"), aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_hline(yintercept = nMaxBalance$Total[2]/1e6, size = 2) +
#geom_line(data=dfMaxBalance, aes(color="Max Balance", y=MaxBal/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black")) +
scale_x_continuous(breaks=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2),labels=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2)) +
#Secondary scale with total max balance
#scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[2])/1e6, labels = c("Max Balance"))) +
#Secondary scale with individual state max balances
scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "Maximum Balance", breaks = dfMaxBalanceCum$CumVal/1e6, labels = dfMaxBalanceCum$StateAsChar)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color=FALSE) +
theme_bw() +
labs(x="", y="Lake Mead Water Conservation\nAccount Balance\n(MAF)") +
theme(text = element_text(size=20),  legend.title = element_blank(),
legend.text=element_text(size=18),
legend.position= c(0.1,0.80))
#Plot #2. Stacked bar chart of deposits to ICS accounts by state by year
#Calcualte deposits each year the differences by year
dfICSDeposit <- data.frame(-diff(as.matrix(dfICSBalance)))
#Put the correct year back in
dfICSDeposit$Year <- dfICSBalance$Year[1:nrow(dfICSDeposit)]
#Melt the data so state columns become a variable
dfICSDepositMelt <- melt(data = dfICSDeposit,id.vars = "Year", measure.vars = cColNames[1:3])
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
ggplot() +
geom_bar(data=dfICSDepositMelt, aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_line(data=dfMaxAnnualAmounts, aes(y=MaxDeposit/1e6,x=Year), size=2) +
geom_line(data=dfMaxAnnualAmounts, aes(color="Max Withdrawal", y=-MaxWithdraw/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black","Black")) +
scale_x_continuous(breaks=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2),labels=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2)) +
scale_y_continuous(sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[1],-nMaxBalance$Total[3])/1e6, labels = c("Max Credit","Max Debit"))) +
#scale_x_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25), limits = c(0,as.numeric(dfMaxStor %>% filter(Reservoir %in% c("Mead")) %>% select(Volume))),
#                  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color = FALSE) +
theme_bw() +
labs(x="", y="Credits and Debits to\nLake Mead Water Conservation Accounts\n(MAF per year)") +
theme(text = element_text(size=20),  legend.title = element_blank(), legend.text=element_text(size=18),
legend.position= c(1.075,0.5))
rm(list = ls())  #Clear history
#Load packages in one go
#List of packages
load.lib <- c("tidyverse", "readxl", "RColorBrewer", "dplyr", "expss", "reshape2", "pracma", "lubridate", "directlabels", "plyr", "stringr", "ggplot2", "ggpubr")
# Then we select only the packages that aren't currently installed.
install.lib <- load.lib[!load.lib %in% installed.packages()]
# And finally we install the missing packages, including their dependency.
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
# After the installation process completes, we load all packages.
sapply(load.lib,require,character=TRUE)
# Load Data
# Read in state balances each year
sExcelFile <- 'IntentionallyCreatedSurplus-Summary.xlsx'
dfICSBalance <- read_excel(sExcelFile, sheet = "Balances",  range = "A1:M18")
dfLimits <- read_excel(sExcelFile, sheet = "Capacities",  range = "A7:F10")
#Read in max balance
nMaxBalance <- read_excel(sExcelFile, sheet = "Capacities",  range = "A7:F10")
#create a data frame
#dfMaxBalance <- data.frame(Year=dfICSBalance$Year, MaxBal =  nMaxBalance$Total[2])
#Read in max deposit per year
dfMaxAnnualAmounts <- data.frame(Year=dfICSBalance$Year, MaxDeposit = nMaxBalance$Total[1], MaxWithdraw = nMaxBalance$Total[3])
cColNames <- colnames(dfICSBalance)
#Melt the data so state columns become a variable
dfICSBalanceMelt <- melt(data = dfICSBalance,id.vars = "Year", measure.vars = cColNames[1:4])
#Calculate the Current ICS balance as a fraction of current Mead Storage
# Data from: https://www.usbr.gov/lc/region/g4000/hourly/levels.html
nCurrMeadStorage <- 9934*1000  # May 1, 2021
nCurrICSTotal <- dfICSBalanceMelt %>% filter(Year == 2019) %>% summarise(Total = sum(value))
print("ICS balance as fraction of Mead storage")
print(sprintf("%.1f%%",nCurrICSTotal$Total/nCurrMeadStorage*100))
print("Percent of Upper Colorado River Basin area of entire continential US area")
print(sprintf("%.1f%%",109800/3119884*100))
palBlues <- brewer.pal(9, "Blues")
#Plot #1. Stacked bar chart of account balance by state by year. Add individual state limits as secondary y axis
# Prepare state limits as a cumulative amount
cColNamesLimits <- colnames(dfLimits)
dfLimitsMelt <- melt(data=dfLimits, id.vars="New levels with DCP", measure.vars = cColNamesLimits[2:5])
dfMaxBalanceCum = dfLimitsMelt %>% filter(`New levels with DCP` == "Max Balance (AF)", variable != 'Total')
#Reorder so Arizona is on top
dfMaxBalanceCum$Order <- c(3,2,1)
dfMaxBalanceCum <- dfMaxBalanceCum[order(dfMaxBalanceCum$Order),]
#Calculate the cumulative total
dfMaxBalanceCum$CumVal <- cumsum(dfMaxBalanceCum$value)
#Replace the Arizona label
dfMaxBalanceCum$StateAsChar <- as.character(dfMaxBalanceCum$variable)
dfMaxBalanceCum$StateAsChar[3] <- "Total/Arizona"
#Write out the dataframe with ICS balances by year to CSV so can use later in other scripts
write.csv(dfICSBalanceMelt, file = "dfICSBalanceMelt.csv")
write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
#Figure 1 - timeseries of bar plots of ICS balances
ggplot() +
geom_bar(data=dfICSBalanceMelt %>% filter(variable != "Mexico"), aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_hline(yintercept = nMaxBalance$Total[2]/1e6, size = 2) +
#geom_line(data=dfMaxBalance, aes(color="Max Balance", y=MaxBal/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black")) +
scale_x_continuous(breaks=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2),labels=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2)) +
#Secondary scale with total max balance
#scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[2])/1e6, labels = c("Max Balance"))) +
#Secondary scale with individual state max balances
scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "Maximum Balance", breaks = dfMaxBalanceCum$CumVal/1e6, labels = dfMaxBalanceCum$StateAsChar)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color=FALSE) +
theme_bw() +
labs(x="", y="Lake Mead Water Conservation\nAccount Balance\n(MAF)") +
theme(text = element_text(size=20),  legend.title = element_blank(),
legend.text=element_text(size=18),
legend.position= c(0.1,0.80))
#Plot #2. Stacked bar chart of deposits to ICS accounts by state by year
#Calcualte deposits each year the differences by year
dfICSDeposit <- data.frame(-diff(as.matrix(dfICSBalance)))
#Put the correct year back in
dfICSDeposit$Year <- dfICSBalance$Year[1:nrow(dfICSDeposit)]
#Melt the data so state columns become a variable
dfICSDepositMelt <- melt(data = dfICSDeposit,id.vars = "Year", measure.vars = cColNames[1:3])
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
ggplot() +
geom_bar(data=dfICSDepositMelt, aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_line(data=dfMaxAnnualAmounts, aes(y=MaxDeposit/1e6,x=Year), size=2) +
geom_line(data=dfMaxAnnualAmounts, aes(color="Max Withdrawal", y=-MaxWithdraw/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black","Black")) +
scale_x_continuous(breaks=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2),labels=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2)) +
scale_y_continuous(sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[1],-nMaxBalance$Total[3])/1e6, labels = c("Max Credit","Max Debit"))) +
#scale_x_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25), limits = c(0,as.numeric(dfMaxStor %>% filter(Reservoir %in% c("Mead")) %>% select(Volume))),
#                  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color = FALSE) +
theme_bw() +
labs(x="", y="Credits and Debits to\nLake Mead Water Conservation Accounts\n(MAF per year)") +
theme(text = element_text(size=20),  legend.title = element_blank(), legend.text=element_text(size=18),
legend.position= c(1.075,0.5))
View(dfICSBalanceMelt)
nCurrICSTotal <- dfICSBalanceMelt %>% filter(Year == 2023) %>% summarise(Total = sum(value))
dfICSBalanceMelt <- melt(data = dfICSBalance,id.vars = "Year", measure.vars = cColNames[2:5])
nCurrMeadStorage <- 9934*1000  # May 1, 2021
nCurrICSTotal <- dfICSBalanceMelt %>% filter(Year == 2023) %>% summarise(Total = sum(value))
print("ICS balance as fraction of Mead storage")
print(sprintf("%.1f%%",nCurrICSTotal$Total/nCurrMeadStorage*100))
print("Percent of Upper Colorado River Basin area of entire continential US area")
print(sprintf("%.1f%%",109800/3119884*100))
palBlues <- brewer.pal(9, "Blues")
#Plot #1. Stacked bar chart of account balance by state by year. Add individual state limits as secondary y axis
# Prepare state limits as a cumulative amount
cColNamesLimits <- colnames(dfLimits)
dfLimitsMelt <- melt(data=dfLimits, id.vars="New levels with DCP", measure.vars = cColNamesLimits[2:5])
dfMaxBalanceCum = dfLimitsMelt %>% filter(`New levels with DCP` == "Max Balance (AF)", variable != 'Total')
#Reorder so Arizona is on top
dfMaxBalanceCum$Order <- c(3,2,1)
dfMaxBalanceCum <- dfMaxBalanceCum[order(dfMaxBalanceCum$Order),]
#Calculate the cumulative total
dfMaxBalanceCum$CumVal <- cumsum(dfMaxBalanceCum$value)
#Replace the Arizona label
dfMaxBalanceCum$StateAsChar <- as.character(dfMaxBalanceCum$variable)
dfMaxBalanceCum$StateAsChar[3] <- "Total/Arizona"
#Write out the dataframe with ICS balances by year to CSV so can use later in other scripts
write.csv(dfICSBalanceMelt, file = "dfICSBalanceMelt.csv")
write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
#Figure 1 - timeseries of bar plots of ICS balances
ggplot() +
geom_bar(data=dfICSBalanceMelt %>% filter(variable != "Mexico"), aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_hline(yintercept = nMaxBalance$Total[2]/1e6, size = 2) +
#geom_line(data=dfMaxBalance, aes(color="Max Balance", y=MaxBal/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black")) +
scale_x_continuous(breaks=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2),labels=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2)) +
#Secondary scale with total max balance
#scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[2])/1e6, labels = c("Max Balance"))) +
#Secondary scale with individual state max balances
scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "Maximum Balance", breaks = dfMaxBalanceCum$CumVal/1e6, labels = dfMaxBalanceCum$StateAsChar)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color=FALSE) +
theme_bw() +
labs(x="", y="Lake Mead Water Conservation\nAccount Balance\n(MAF)") +
theme(text = element_text(size=20),  legend.title = element_blank(),
legend.text=element_text(size=18),
legend.position= c(0.1,0.80))
#Plot #2. Stacked bar chart of deposits to ICS accounts by state by year
#Calcualte deposits each year the differences by year
dfICSDeposit <- data.frame(-diff(as.matrix(dfICSBalance)))
#Put the correct year back in
dfICSDeposit$Year <- dfICSBalance$Year[1:nrow(dfICSDeposit)]
#Melt the data so state columns become a variable
dfICSDepositMelt <- melt(data = dfICSDeposit,id.vars = "Year", measure.vars = cColNames[1:3])
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
ggplot() +
geom_bar(data=dfICSDepositMelt, aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_line(data=dfMaxAnnualAmounts, aes(y=MaxDeposit/1e6,x=Year), size=2) +
geom_line(data=dfMaxAnnualAmounts, aes(color="Max Withdrawal", y=-MaxWithdraw/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black","Black")) +
scale_x_continuous(breaks=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2),labels=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2)) +
scale_y_continuous(sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[1],-nMaxBalance$Total[3])/1e6, labels = c("Max Credit","Max Debit"))) +
#scale_x_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25), limits = c(0,as.numeric(dfMaxStor %>% filter(Reservoir %in% c("Mead")) %>% select(Volume))),
#                  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color = FALSE) +
theme_bw() +
labs(x="", y="Credits and Debits to\nLake Mead Water Conservation Accounts\n(MAF per year)") +
theme(text = element_text(size=20),  legend.title = element_blank(), legend.text=element_text(size=18),
legend.position= c(1.075,0.5))
dfICSBalanceMelt <- melt(data = dfICSBalance,id.vars = "Year", measure.vars = cColNames[2:6])
nCurrMeadStorage <- 9934*1000  # May 1, 2021
nCurrICSTotal <- dfICSBalanceMelt %>% filter(Year == 2023) %>% summarise(Total = sum(value))
print("ICS balance as fraction of Mead storage")
print(sprintf("%.1f%%",nCurrICSTotal$Total/nCurrMeadStorage*100))
print("Percent of Upper Colorado River Basin area of entire continential US area")
print(sprintf("%.1f%%",109800/3119884*100))
palBlues <- brewer.pal(9, "Blues")
#Plot #1. Stacked bar chart of account balance by state by year. Add individual state limits as secondary y axis
# Prepare state limits as a cumulative amount
cColNamesLimits <- colnames(dfLimits)
dfLimitsMelt <- melt(data=dfLimits, id.vars="New levels with DCP", measure.vars = cColNamesLimits[2:5])
dfMaxBalanceCum = dfLimitsMelt %>% filter(`New levels with DCP` == "Max Balance (AF)", variable != 'Total')
#Reorder so Arizona is on top
dfMaxBalanceCum$Order <- c(3,2,1)
dfMaxBalanceCum <- dfMaxBalanceCum[order(dfMaxBalanceCum$Order),]
#Calculate the cumulative total
dfMaxBalanceCum$CumVal <- cumsum(dfMaxBalanceCum$value)
#Replace the Arizona label
dfMaxBalanceCum$StateAsChar <- as.character(dfMaxBalanceCum$variable)
dfMaxBalanceCum$StateAsChar[3] <- "Total/Arizona"
#Write out the dataframe with ICS balances by year to CSV so can use later in other scripts
write.csv(dfICSBalanceMelt, file = "dfICSBalanceMelt.csv")
write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
#Figure 1 - timeseries of bar plots of ICS balances
ggplot() +
geom_bar(data=dfICSBalanceMelt %>% filter(variable != "Mexico"), aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_hline(yintercept = nMaxBalance$Total[2]/1e6, size = 2) +
#geom_line(data=dfMaxBalance, aes(color="Max Balance", y=MaxBal/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black")) +
scale_x_continuous(breaks=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2),labels=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2)) +
#Secondary scale with total max balance
#scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[2])/1e6, labels = c("Max Balance"))) +
#Secondary scale with individual state max balances
scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "Maximum Balance", breaks = dfMaxBalanceCum$CumVal/1e6, labels = dfMaxBalanceCum$StateAsChar)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color=FALSE) +
theme_bw() +
labs(x="", y="Lake Mead Water Conservation\nAccount Balance\n(MAF)") +
theme(text = element_text(size=20),  legend.title = element_blank(),
legend.text=element_text(size=18),
legend.position= c(0.1,0.80))
dfICSBalanceMelt <- melt(data = dfICSBalance,id.vars = "Year", measure.vars = cColNames[2:5])
nCurrMeadStorage <- 9934*1000  # May 1, 2021
nCurrICSTotal <- dfICSBalanceMelt %>% filter(Year == 2023) %>% summarise(Total = sum(value))
print("ICS balance as fraction of Mead storage")
print(sprintf("%.1f%%",nCurrICSTotal$Total/nCurrMeadStorage*100))
print("Percent of Upper Colorado River Basin area of entire continential US area")
print(sprintf("%.1f%%",109800/3119884*100))
palBlues <- brewer.pal(9, "Blues")
#Plot #1. Stacked bar chart of account balance by state by year. Add individual state limits as secondary y axis
# Prepare state limits as a cumulative amount
cColNamesLimits <- colnames(dfLimits)
dfLimitsMelt <- melt(data=dfLimits, id.vars="New levels with DCP", measure.vars = cColNamesLimits[2:5])
dfMaxBalanceCum = dfLimitsMelt %>% filter(`New levels with DCP` == "Max Balance (AF)", variable != 'Total')
#Reorder so Arizona is on top
dfMaxBalanceCum$Order <- c(3,2,1)
dfMaxBalanceCum <- dfMaxBalanceCum[order(dfMaxBalanceCum$Order),]
#Calculate the cumulative total
dfMaxBalanceCum$CumVal <- cumsum(dfMaxBalanceCum$value)
#Replace the Arizona label
dfMaxBalanceCum$StateAsChar <- as.character(dfMaxBalanceCum$variable)
dfMaxBalanceCum$StateAsChar[3] <- "Total/Arizona"
#Write out the dataframe with ICS balances by year to CSV so can use later in other scripts
write.csv(dfICSBalanceMelt, file = "dfICSBalanceMelt.csv")
write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
View(dfMaxBalanceCum)
dfMaxBalanceCum = dfLimitsMelt %>% filter(`New levels with DCP` == "Max Balance (AF)", variable != 'Total')
dfMaxBalanceCum$Order <- c(3,2,1)
dfLimits <- read_excel(sExcelFile, sheet = "Capacities",  range = "A7:F10")
cColNamesLimits <- colnames(dfLimits)
dfLimitsMelt <- melt(data=dfLimits, id.vars="New levels with DCP", measure.vars = cColNamesLimits[2:5])
View(dfLimitsMelt)
dfMaxBalanceCum = dfLimitsMelt %>% filter(`New levels with DCP` == "Max Balance (AF)", variable != 'Total')
dfMaxBalanceCum$Order <- c(3,2,1,4)
dfMaxBalanceCum <- dfMaxBalanceCum[order(dfMaxBalanceCum$Order),]
dfMaxBalanceCum$CumVal <- cumsum(dfMaxBalanceCum$value)
dfMaxBalanceCum$StateAsChar <- as.character(dfMaxBalanceCum$variable)
dfMaxBalanceCum$StateAsChar[3] <- "Total/Arizona"
write.csv(dfICSBalanceMelt, file = "dfICSBalanceMelt.csv")
write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
dfICSBalanceMelt <- melt(data = dfICSBalance,id.vars = "Year", measure.vars = cColNames[2:5])
write.csv(dfICSBalanceMelt, file = "dfICSBalanceMelt.csv")
#write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
ggplot() +
geom_bar(data=dfICSBalanceMelt %>% filter(variable != "Mexico"), aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_hline(yintercept = nMaxBalance$Total[2]/1e6, size = 2) +
#geom_line(data=dfMaxBalance, aes(color="Max Balance", y=MaxBal/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black")) +
scale_x_continuous(breaks=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2),labels=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2)) +
#Secondary scale with total max balance
#scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[2])/1e6, labels = c("Max Balance"))) +
#Secondary scale with individual state max balances
scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "Maximum Balance", breaks = dfMaxBalanceCum$CumVal/1e6, labels = dfMaxBalanceCum$StateAsChar)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color=FALSE) +
theme_bw() +
labs(x="", y="Lake Mead Water Conservation\nAccount Balance\n(MAF)") +
theme(text = element_text(size=20),  legend.title = element_blank(),
legend.text=element_text(size=18),
legend.position= c(0.1,0.80))
ggplot() +
geom_bar(data=dfICSBalanceMelt %>% filter(variable != "Mexico"), aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_hline(yintercept = nMaxBalance$Total[2]/1e6, size = 2) +
#geom_line(data=dfMaxBalance, aes(color="Max Balance", y=MaxBal/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[2:4]) +
scale_color_manual(name="Guide2", values=c("Black")) +
scale_x_continuous(breaks=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2),labels=seq(min(dfICSBalanceMelt$Year),max(dfICSBalanceMelt$Year),by=2)) +
#Secondary scale with total max balance
#scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[2])/1e6, labels = c("Max Balance"))) +
#Secondary scale with individual state max balances
scale_y_continuous(breaks=seq(0,3,by=1),labels=seq(0,3,by=1), sec.axis = sec_axis(~. +0, name = "Maximum Balance", breaks = dfMaxBalanceCum$CumVal/1e6, labels = dfMaxBalanceCum$StateAsChar)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color=FALSE) +
theme_bw() +
labs(x="", y="Lake Mead Water Conservation\nAccount Balance\n(MAF)") +
theme(text = element_text(size=20),  legend.title = element_blank(),
legend.text=element_text(size=18),
legend.position= c(0.1,0.80))
#Plot #2. Stacked bar chart of deposits to ICS accounts by state by year
#Calcualte deposits each year the differences by year
dfICSDeposit <- data.frame(-diff(as.matrix(dfICSBalance)))
#Put the correct year back in
dfICSDeposit$Year <- dfICSBalance$Year[1:nrow(dfICSDeposit)]
#Melt the data so state columns become a variable
dfICSDepositMelt <- melt(data = dfICSDeposit,id.vars = "Year", measure.vars = cColNames[1:3])
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
ggplot() +
geom_bar(data=dfICSDepositMelt, aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_line(data=dfMaxAnnualAmounts, aes(y=MaxDeposit/1e6,x=Year), size=2) +
geom_line(data=dfMaxAnnualAmounts, aes(color="Max Withdrawal", y=-MaxWithdraw/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black","Black")) +
scale_x_continuous(breaks=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2),labels=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2)) +
scale_y_continuous(sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[1],-nMaxBalance$Total[3])/1e6, labels = c("Max Credit","Max Debit"))) +
#scale_x_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25), limits = c(0,as.numeric(dfMaxStor %>% filter(Reservoir %in% c("Mead")) %>% select(Volume))),
#                  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color = FALSE) +
theme_bw() +
labs(x="", y="Credits and Debits to\nLake Mead Water Conservation Accounts\n(MAF per year)") +
theme(text = element_text(size=20),  legend.title = element_blank(), legend.text=element_text(size=18),
legend.position= c(1.075,0.5))
View(dfICSBalance)
dfICSDeposit <- data.frame(-diff(as.matrix(dfICSBalance %>% select(Arizona,California,Nevada,Mexico,Total...6,Year))))
dfICSDeposit$Year <- dfICSBalance$Year[1:nrow(dfICSDeposit)]
#Melt the data so state columns become a variable
dfICSDepositMelt <- melt(data = dfICSDeposit,id.vars = "Year", measure.vars = cColNames[1:3])
dfICSDeposit$Year <- dfICSBalance$Year[1:nrow(dfICSDeposit)]
View(dfICSDeposit)
dfICSDepositMelt <- melt(data = dfICSDeposit,id.vars = "Year", measure.vars = cColNames[1:3])
dfICSDepositMelt <- melt(data = dfICSDeposit,id.vars = "Year", measure.vars = cColNames[2:4])
write.csv(dfICSDeposit, file = "dfICSDeposit.csv")
write.csv(dfICSDepositMelt, file = "dfICSDepositMelt.csv")
ggplot() +
geom_bar(data=dfICSDepositMelt, aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_line(data=dfMaxAnnualAmounts, aes(y=MaxDeposit/1e6,x=Year), size=2) +
geom_line(data=dfMaxAnnualAmounts, aes(color="Max Withdrawal", y=-MaxWithdraw/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[1:3]) +
scale_color_manual(name="Guide2", values=c("Black","Black")) +
scale_x_continuous(breaks=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2),labels=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2)) +
scale_y_continuous(sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[1],-nMaxBalance$Total[3])/1e6, labels = c("Max Credit","Max Debit"))) +
#scale_x_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25), limits = c(0,as.numeric(dfMaxStor %>% filter(Reservoir %in% c("Mead")) %>% select(Volume))),
#                  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color = FALSE) +
theme_bw() +
labs(x="", y="Credits and Debits to\nLake Mead Water Conservation Accounts\n(MAF per year)") +
theme(text = element_text(size=20),  legend.title = element_blank(), legend.text=element_text(size=18),
legend.position= c(1.075,0.5))
ggplot() +
geom_bar(data=dfICSDepositMelt, aes(fill=variable,y=value/1e6,x=Year),position="stack", stat="identity") +
geom_line(data=dfMaxAnnualAmounts, aes(y=MaxDeposit/1e6,x=Year), size=2) +
geom_line(data=dfMaxAnnualAmounts, aes(color="Max Withdrawal", y=-MaxWithdraw/1e6,x=Year), size=2) +
scale_fill_manual(name="Guide1",values = c(palBlues[3],palBlues[6],palBlues[9]),breaks=cColNames[2:4]) +
scale_color_manual(name="Guide2", values=c("Black","Black")) +
scale_x_continuous(breaks=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2),labels=seq(min(dfICSDepositMelt$Year),max(dfICSDepositMelt$Year),by=2)) +
scale_y_continuous(sec.axis = sec_axis(~. +0, name = "", breaks = c(nMaxBalance$Total[1],-nMaxBalance$Total[3])/1e6, labels = c("Max Credit","Max Debit"))) +
#scale_x_continuous(breaks = c(0,5,10,15,20,25),labels=c(0,5,10,15, 20,25), limits = c(0,as.numeric(dfMaxStor %>% filter(Reservoir %in% c("Mead")) %>% select(Volume))),
#                  sec.axis = sec_axis(~. +0, name = "Mead Level (feet)", breaks = dfMeadPoolsPlot$stor_maf, labels = dfMeadPoolsPlot$label)) +
guides(fill = guide_legend(keywidth = 1, keyheight = 1), color = FALSE) +
theme_bw() +
labs(x="", y="Credits and Debits to\nLake Mead Water Conservation Accounts\n(MAF per year)") +
theme(text = element_text(size=20),  legend.title = element_blank(), legend.text=element_text(size=18),
legend.position= c(1.075,0.5))
